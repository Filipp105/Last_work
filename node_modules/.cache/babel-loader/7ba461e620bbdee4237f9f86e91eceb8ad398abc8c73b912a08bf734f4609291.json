{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\\\u0414\\u0438\\u043F\\u043B\\u043E\\u043C\\u043D\\u0430\\u044F\\\\ToDo-app-main\\\\src\\\\components\\\\Routes\\\\DoneTasks.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useAppSelector } from \"../../store/hooks\";\nimport useCompletedTasks from \"../hooks/useCompletedTasks\";\nimport useDescriptionTitle from \"../hooks/useDescriptionTitle\";\nimport LayoutRoutes from \"../Utilities/LayoutRoutes\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DoneTasks = ({\n  done,\n  title\n}) => {\n  _s();\n  const tasks = useAppSelector(state => state.tasks.tasks);\n  const {\n    tasks: tasksFiltered\n  } = useCompletedTasks({\n    tasks,\n    done\n  });\n  useDescriptionTitle(\"All tasks done\", title);\n  return /*#__PURE__*/_jsxDEV(LayoutRoutes, {\n    title: title,\n    tasks: tasksFiltered\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 10\n  }, this);\n};\n_s(DoneTasks, \"m8v7G89QRvlUOqBWV5Hd71z4C74=\", false, function () {\n  return [useAppSelector, useCompletedTasks, useDescriptionTitle];\n});\n_c = DoneTasks;\nexport default DoneTasks;\nvar _c;\n$RefreshReg$(_c, \"DoneTasks\");","map":{"version":3,"names":["React","useAppSelector","useCompletedTasks","useDescriptionTitle","LayoutRoutes","jsxDEV","_jsxDEV","DoneTasks","done","title","_s","tasks","state","tasksFiltered","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/Дипломная/ToDo-app-main/src/components/Routes/DoneTasks.tsx"],"sourcesContent":["import React from \"react\";\nimport { useAppSelector } from \"../../store/hooks\";\nimport useCompletedTasks from \"../hooks/useCompletedTasks\";\nimport useDescriptionTitle from \"../hooks/useDescriptionTitle\";\nimport LayoutRoutes from \"../Utilities/LayoutRoutes\";\n\nconst DoneTasks: React.FC<{ done: boolean; title: string }> = ({\n  done,\n  title,\n}) => {\n  const tasks = useAppSelector((state) => state.tasks.tasks);\n\n  const { tasks: tasksFiltered } = useCompletedTasks({ tasks, done });\n\n  useDescriptionTitle(\"All tasks done\", title);\n\n  return <LayoutRoutes title={title} tasks={tasksFiltered}></LayoutRoutes>;\n};\n\nexport default DoneTasks;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,cAAc,QAAQ,mBAAmB;AAClD,OAAOC,iBAAiB,MAAM,4BAA4B;AAC1D,OAAOC,mBAAmB,MAAM,8BAA8B;AAC9D,OAAOC,YAAY,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,MAAMC,SAAqD,GAAGA,CAAC;EAC7DC,IAAI;EACJC;AACF,CAAC,KAAK;EAAAC,EAAA;EACJ,MAAMC,KAAK,GAAGV,cAAc,CAAEW,KAAK,IAAKA,KAAK,CAACD,KAAK,CAACA,KAAK,CAAC;EAE1D,MAAM;IAAEA,KAAK,EAAEE;EAAc,CAAC,GAAGX,iBAAiB,CAAC;IAAES,KAAK;IAAEH;EAAK,CAAC,CAAC;EAEnEL,mBAAmB,CAAC,gBAAgB,EAAEM,KAAK,CAAC;EAE5C,oBAAOH,OAAA,CAACF,YAAY;IAACK,KAAK,EAAEA,KAAM;IAACE,KAAK,EAAEE;EAAc;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAe,CAAC;AAC1E,CAAC;AAACP,EAAA,CAXIH,SAAqD;EAAA,QAI3CN,cAAc,EAEKC,iBAAiB,EAElDC,mBAAmB;AAAA;AAAAe,EAAA,GARfX,SAAqD;AAa3D,eAAeA,SAAS;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}