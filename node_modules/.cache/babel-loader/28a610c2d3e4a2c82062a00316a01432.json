{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\\\u0414\\u0438\\u043F\\u043B\\u043E\\u043C\\u043D\\u0430\\u044F\\\\ToDo-app-main\\\\src\\\\components\\\\Routes\\\\SearchResults.tsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\nimport useDescriptionTitle from \"../hooks/useDescriptionTitle\";\nimport useSearchQuery from \"../hooks/useSearchQuery\";\nimport LayoutRoutes from \"../Utilities/LayoutRoutes\";\nconst SearchResults = () => {\n  const [searchParams] = useSearchParams();\n  const navigate = useNavigate();\n  const [currQueryParam, setCurrQueryParam] = useState(\"\");\n  useEffect(() => {\n    const query = searchParams.get(\"q\");\n    if (!query) {\n      // se \"q\" for igual a '' ou \"q\" não existir\n      navigate(\"/\");\n    } else {\n      setCurrQueryParam(query);\n    }\n  }, [navigate, searchParams]);\n  const matchedTasks = useSearchQuery(currQueryParam);\n  const title = `Results for \"${currQueryParam}\"`;\n  useDescriptionTitle(title, title);\n  return /*#__PURE__*/React.createElement(LayoutRoutes, {\n    title: title,\n    tasks: matchedTasks,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 10\n    }\n  });\n};\nexport default SearchResults;","map":{"version":3,"names":["React","useEffect","useState","useNavigate","useSearchParams","useDescriptionTitle","useSearchQuery","LayoutRoutes","SearchResults","searchParams","navigate","currQueryParam","setCurrQueryParam","query","get","matchedTasks","title","createElement","tasks","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/Admin/Desktop/Дипломная/ToDo-app-main/src/components/Routes/SearchResults.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\nimport useDescriptionTitle from \"../hooks/useDescriptionTitle\";\nimport useSearchQuery from \"../hooks/useSearchQuery\";\nimport LayoutRoutes from \"../Utilities/LayoutRoutes\";\n\nconst SearchResults: React.FC = () => {\n  const [searchParams] = useSearchParams();\n  const navigate = useNavigate();\n\n  const [currQueryParam, setCurrQueryParam] = useState<string>(\"\");\n\n  useEffect(() => {\n    const query = searchParams.get(\"q\");\n    if (!query) {\n      // se \"q\" for igual a '' ou \"q\" não existir\n      navigate(\"/\");\n    } else {\n      setCurrQueryParam(query);\n    }\n  }, [navigate, searchParams]);\n\n  const matchedTasks = useSearchQuery(currQueryParam);\n\n  const title = `Results for \"${currQueryParam}\"`;\n\n  useDescriptionTitle(title, title);\n\n  return <LayoutRoutes title={title} tasks={matchedTasks}></LayoutRoutes>;\n};\n\nexport default SearchResults;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,eAAe,QAAQ,kBAAkB;AAC/D,OAAOC,mBAAmB,MAAM,8BAA8B;AAC9D,OAAOC,cAAc,MAAM,yBAAyB;AACpD,OAAOC,YAAY,MAAM,2BAA2B;AAEpD,MAAMC,aAAuB,GAAGA,CAAA,KAAM;EACpC,MAAM,CAACC,YAAY,CAAC,GAAGL,eAAe,CAAC,CAAC;EACxC,MAAMM,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAE9B,MAAM,CAACQ,cAAc,EAAEC,iBAAiB,CAAC,GAAGV,QAAQ,CAAS,EAAE,CAAC;EAEhED,SAAS,CAAC,MAAM;IACd,MAAMY,KAAK,GAAGJ,YAAY,CAACK,GAAG,CAAC,GAAG,CAAC;IACnC,IAAI,CAACD,KAAK,EAAE;MACV;MACAH,QAAQ,CAAC,GAAG,CAAC;IACf,CAAC,MAAM;MACLE,iBAAiB,CAACC,KAAK,CAAC;IAC1B;EACF,CAAC,EAAE,CAACH,QAAQ,EAAED,YAAY,CAAC,CAAC;EAE5B,MAAMM,YAAY,GAAGT,cAAc,CAACK,cAAc,CAAC;EAEnD,MAAMK,KAAK,GAAI,gBAAeL,cAAe,GAAE;EAE/CN,mBAAmB,CAACW,KAAK,EAAEA,KAAK,CAAC;EAEjC,oBAAOhB,KAAA,CAAAiB,aAAA,CAACV,YAAY;IAACS,KAAK,EAAEA,KAAM;IAACE,KAAK,EAAEH,YAAa;IAAAI,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAe,CAAC;AACzE,CAAC;AAED,eAAehB,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module"}