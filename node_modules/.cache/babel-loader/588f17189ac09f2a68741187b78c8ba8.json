{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\\\u0414\\u0438\\u043F\\u043B\\u043E\\u043C\\u043D\\u0430\\u044F\\\\ToDo-app-main\\\\src\\\\components\\\\TasksSection\\\\TaskItem\\\\BtnToggleCompleted.tsx\";\nimport React from \"react\";\nimport { useAppDispatch } from \"../../../store/hooks\";\nimport { tasksActions } from \"../../../store/Tasks.store\";\nimport { ReactComponent as SvgX } from \"@svgr/webpack?-svgo,+ref!../../../assets/x.svg\";\nimport { ReactComponent as Check } from \"@svgr/webpack?-svgo,+ref!../../../assets/check.svg\";\nconst BtnToggleCompleted = ({\n  taskCompleted,\n  taskId,\n  isListInView1\n}) => {\n  const dispatch = useAppDispatch();\n  const toggleTaskCompleted = id => {\n    dispatch(tasksActions.toggleTaskCompleted(id));\n  };\n  return /*#__PURE__*/React.createElement(\"button\", {\n    title: taskCompleted ? \"mark as uncompleted\" : \"mark as completed\",\n    className: `${taskCompleted ? \"bg-emerald-200 text-emerald-800 \" : \"bg-amber-200 text-amber-800 \"} ${isListInView1 ? \"mr-4\" : \"mr-4 order-0\"} rounded-full font-medium`,\n    onClick: () => toggleTaskCompleted(taskId),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"block py-1 px-3 absolute invisible sm:static sm:visible\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, taskCompleted ? \"completed\" : \"uncompleted\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \" sm:hidden w-6 h-6 grid place-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, taskCompleted ? /*#__PURE__*/React.createElement(Check, {\n    className: \"w-3 h-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }) : /*#__PURE__*/React.createElement(SvgX, {\n    className: \"w-3 h-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  })));\n};\nexport default React.memo(BtnToggleCompleted);","map":{"version":3,"names":["React","useAppDispatch","tasksActions","ReactComponent","SvgX","Check","BtnToggleCompleted","taskCompleted","taskId","isListInView1","dispatch","toggleTaskCompleted","id","createElement","title","className","onClick","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","memo"],"sources":["C:/Users/Admin/Desktop/Дипломная/ToDo-app-main/src/components/TasksSection/TaskItem/BtnToggleCompleted.tsx"],"sourcesContent":["import React from \"react\";\nimport { useAppDispatch } from \"../../../store/hooks\";\nimport { tasksActions } from \"../../../store/Tasks.store\";\nimport { ReactComponent as SvgX } from \"../../../assets/x.svg\";\nimport { ReactComponent as Check } from \"../../../assets/check.svg\";\n\nconst BtnToggleCompleted: React.FC<{\n  taskCompleted: boolean;\n  taskId: string;\n  isListInView1: boolean;\n}> = ({ taskCompleted, taskId, isListInView1 }) => {\n  const dispatch = useAppDispatch();\n\n  const toggleTaskCompleted = (id: string) => {\n    dispatch(tasksActions.toggleTaskCompleted(id));\n  };\n\n  return (\n    <button\n      title={taskCompleted ? \"mark as uncompleted\" : \"mark as completed\"}\n      className={`${\n        taskCompleted\n          ? \"bg-emerald-200 text-emerald-800 \"\n          : \"bg-amber-200 text-amber-800 \"\n      } ${isListInView1 ? \"mr-4\" : \"mr-4 order-0\"} rounded-full font-medium`}\n      onClick={() => toggleTaskCompleted(taskId)}\n    >\n      <span className=\"block py-1 px-3 absolute invisible sm:static sm:visible\">\n        {taskCompleted ? \"completed\" : \"uncompleted\"}\n      </span>\n      <span className=\" sm:hidden w-6 h-6 grid place-items-center\">\n        {taskCompleted ? (\n          <Check className=\"w-3 h-3\" />\n        ) : (\n          <SvgX className=\"w-3 h-3\" />\n        )}\n      </span>\n    </button>\n  );\n};\n\nexport default React.memo(BtnToggleCompleted);\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,cAAc,QAAQ,sBAAsB;AACrD,SAASC,YAAY,QAAQ,4BAA4B;AAAC,SAAAC,cAAA,IAAAC,IAAA;AAAA,SAAAD,cAAA,IAAAE,KAAA;AAI1D,MAAMC,kBAIJ,GAAGA,CAAC;EAAEC,aAAa;EAAEC,MAAM;EAAEC;AAAc,CAAC,KAAK;EACjD,MAAMC,QAAQ,GAAGT,cAAc,CAAC,CAAC;EAEjC,MAAMU,mBAAmB,GAAIC,EAAU,IAAK;IAC1CF,QAAQ,CAACR,YAAY,CAACS,mBAAmB,CAACC,EAAE,CAAC,CAAC;EAChD,CAAC;EAED,oBACEZ,KAAA,CAAAa,aAAA;IACEC,KAAK,EAAEP,aAAa,GAAG,qBAAqB,GAAG,mBAAoB;IACnEQ,SAAS,EAAG,GACVR,aAAa,GACT,kCAAkC,GAClC,8BACL,IAAGE,aAAa,GAAG,MAAM,GAAG,cAAe,2BAA2B;IACvEO,OAAO,EAAEA,CAAA,KAAML,mBAAmB,CAACH,MAAM,CAAE;IAAAS,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAE3CtB,KAAA,CAAAa,aAAA;IAAME,SAAS,EAAC,yDAAyD;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACtEf,aAAa,GAAG,WAAW,GAAG,aAC3B,CAAC,eACPP,KAAA,CAAAa,aAAA;IAAME,SAAS,EAAC,4CAA4C;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACzDf,aAAa,gBACZP,KAAA,CAAAa,aAAA,CAACR,KAAK;IAACU,SAAS,EAAC,SAAS;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,gBAE7BtB,KAAA,CAAAa,aAAA,CAACT,IAAI;IAACW,SAAS,EAAC,SAAS;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAEzB,CACA,CAAC;AAEb,CAAC;AAED,eAAetB,KAAK,CAACuB,IAAI,CAACjB,kBAAkB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}