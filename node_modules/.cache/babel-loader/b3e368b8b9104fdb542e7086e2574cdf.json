{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\\\u0414\\u0438\\u043F\\u043B\\u043E\\u043C\\u043D\\u0430\\u044F\\\\ToDo-app-main\\\\src\\\\components\\\\Routes\\\\ImportantTasks.tsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { useAppSelector } from \"../../store/hooks\";\nimport useDescriptionTitle from \"../hooks/useDescriptionTitle\";\nimport LayoutRoutes from \"../Utilities/LayoutRoutes\";\nconst ImportantTasks = () => {\n  const tasks = useAppSelector(state => state.tasks.tasks);\n  const [importantTasks, setImportantTasks] = useState([]);\n  useEffect(() => {\n    const filteredTasks = tasks.filter(task => task.important);\n    setImportantTasks(filteredTasks);\n  }, [tasks]);\n  useDescriptionTitle(\"Tasks marked as important\", \"Important tasks\");\n  return /*#__PURE__*/React.createElement(LayoutRoutes, {\n    title: \"Important tasks\",\n    tasks: importantTasks,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  });\n};\nexport default ImportantTasks;","map":{"version":3,"names":["React","useState","useEffect","useAppSelector","useDescriptionTitle","LayoutRoutes","ImportantTasks","tasks","state","importantTasks","setImportantTasks","filteredTasks","filter","task","important","createElement","title","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/Admin/Desktop/Дипломная/ToDo-app-main/src/components/Routes/ImportantTasks.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Task } from \"../../interfaces\";\nimport { useAppSelector } from \"../../store/hooks\";\nimport useDescriptionTitle from \"../hooks/useDescriptionTitle\";\nimport LayoutRoutes from \"../Utilities/LayoutRoutes\";\n\nconst ImportantTasks: React.FC = () => {\n  const tasks = useAppSelector((state) => state.tasks.tasks);\n  const [importantTasks, setImportantTasks] = useState<Task[]>([]);\n\n  useEffect(() => {\n    const filteredTasks: Task[] = tasks.filter((task: Task) => task.important);\n    setImportantTasks(filteredTasks);\n  }, [tasks]);\n\n  useDescriptionTitle(\"Tasks marked as important\", \"Important tasks\");\n\n  return (\n    <LayoutRoutes title=\"Important tasks\" tasks={importantTasks}></LayoutRoutes>\n  );\n};\n\nexport default ImportantTasks;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAElD,SAASC,cAAc,QAAQ,mBAAmB;AAClD,OAAOC,mBAAmB,MAAM,8BAA8B;AAC9D,OAAOC,YAAY,MAAM,2BAA2B;AAEpD,MAAMC,cAAwB,GAAGA,CAAA,KAAM;EACrC,MAAMC,KAAK,GAAGJ,cAAc,CAAEK,KAAK,IAAKA,KAAK,CAACD,KAAK,CAACA,KAAK,CAAC;EAC1D,MAAM,CAACE,cAAc,EAAEC,iBAAiB,CAAC,GAAGT,QAAQ,CAAS,EAAE,CAAC;EAEhEC,SAAS,CAAC,MAAM;IACd,MAAMS,aAAqB,GAAGJ,KAAK,CAACK,MAAM,CAAEC,IAAU,IAAKA,IAAI,CAACC,SAAS,CAAC;IAC1EJ,iBAAiB,CAACC,aAAa,CAAC;EAClC,CAAC,EAAE,CAACJ,KAAK,CAAC,CAAC;EAEXH,mBAAmB,CAAC,2BAA2B,EAAE,iBAAiB,CAAC;EAEnE,oBACEJ,KAAA,CAAAe,aAAA,CAACV,YAAY;IAACW,KAAK,EAAC,iBAAiB;IAACT,KAAK,EAAEE,cAAe;IAAAQ,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAe,CAAC;AAEhF,CAAC;AAED,eAAehB,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module"}