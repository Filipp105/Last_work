{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\\\u0414\\u0438\\u043F\\u043B\\u043E\\u043C\\u043D\\u0430\\u044F\\\\ToDo-app-main\\\\src\\\\components\\\\TasksSection\\\\TaskItem\\\\BtnEditTask.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useAppDispatch } from \"../../../store/hooks\";\nimport { tasksActions } from \"../../../store/Tasks.store\";\nimport ModalCreateTask from \"../../Utilities/ModalTask\";\nimport { ReactComponent as OptionsSvg } from \"../../../assets/options.svg\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst BtnEditTask = ({\n  task\n}) => {\n  _s();\n  const [modalEditTaskOpen, setModalEditTaskOpen] = useState(false);\n  const dispatch = useAppDispatch();\n  const closeModalEditTask = () => {\n    setModalEditTaskOpen(false);\n  };\n  const openModalEditTask = () => {\n    setModalEditTaskOpen(true);\n  };\n  const editTaskHandler = task => {\n    dispatch(tasksActions.editTask(task));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      title: \"edit task\",\n      className: \"transition w-7 sm:w-8 h-6 sm:h-8 grid place-items-center dark:hover:text-slate-200 hover:text-slate-700\",\n      onClick: openModalEditTask,\n      children: /*#__PURE__*/_jsxDEV(OptionsSvg, {\n        className: \"w-4 sm:w-5 h-4 sm:h-5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), modalEditTaskOpen && /*#__PURE__*/_jsxDEV(ModalCreateTask, {\n      onClose: closeModalEditTask,\n      task: task,\n      nameForm: \"Edit task\",\n      onConfirm: editTaskHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(BtnEditTask, \"H+sxV+0FDcIm9yA/mHQ4pvq4Pn8=\", false, function () {\n  return [useAppDispatch];\n});\n_c = BtnEditTask;\nexport default BtnEditTask;\nvar _c;\n$RefreshReg$(_c, \"BtnEditTask\");","map":{"version":3,"names":["React","useState","useAppDispatch","tasksActions","ModalCreateTask","ReactComponent","OptionsSvg","jsxDEV","_jsxDEV","Fragment","_Fragment","BtnEditTask","task","_s","modalEditTaskOpen","setModalEditTaskOpen","dispatch","closeModalEditTask","openModalEditTask","editTaskHandler","editTask","children","title","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onClose","nameForm","onConfirm","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/Дипломная/ToDo-app-main/src/components/TasksSection/TaskItem/BtnEditTask.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useAppDispatch } from \"../../../store/hooks\";\nimport { tasksActions } from \"../../../store/Tasks.store\";\nimport ModalCreateTask from \"../../Utilities/ModalTask\";\nimport { ReactComponent as OptionsSvg } from \"../../../assets/options.svg\";\nimport { Task } from \"../../../interfaces\";\n\nconst BtnEditTask: React.FC<{ task: Task }> = ({ task }) => {\n  const [modalEditTaskOpen, setModalEditTaskOpen] = useState<boolean>(false);\n  const dispatch = useAppDispatch();\n\n  const closeModalEditTask = () => {\n    setModalEditTaskOpen(false);\n  };\n\n  const openModalEditTask = () => {\n    setModalEditTaskOpen(true);\n  };\n\n  const editTaskHandler = (task: Task) => {\n    dispatch(tasksActions.editTask(task));\n  };\n\n  return (\n    <>\n      <button\n        title=\"edit task\"\n        className=\"transition w-7 sm:w-8 h-6 sm:h-8 grid place-items-center dark:hover:text-slate-200 hover:text-slate-700\"\n        onClick={openModalEditTask}\n      >\n        <OptionsSvg className=\"w-4 sm:w-5 h-4 sm:h-5\" />\n      </button>\n      {modalEditTaskOpen && (\n        <ModalCreateTask\n          onClose={closeModalEditTask}\n          task={task}\n          nameForm=\"Edit task\"\n          onConfirm={editTaskHandler}\n        />\n      )}\n    </>\n  );\n};\n\nexport default BtnEditTask;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,cAAc,QAAQ,sBAAsB;AACrD,SAASC,YAAY,QAAQ,4BAA4B;AACzD,OAAOC,eAAe,MAAM,2BAA2B;AACvD,SAASC,cAAc,IAAIC,UAAU,QAAQ,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAG3E,MAAMC,WAAqC,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EAC1D,MAAM,CAACC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGd,QAAQ,CAAU,KAAK,CAAC;EAC1E,MAAMe,QAAQ,GAAGd,cAAc,CAAC,CAAC;EAEjC,MAAMe,kBAAkB,GAAGA,CAAA,KAAM;IAC/BF,oBAAoB,CAAC,KAAK,CAAC;EAC7B,CAAC;EAED,MAAMG,iBAAiB,GAAGA,CAAA,KAAM;IAC9BH,oBAAoB,CAAC,IAAI,CAAC;EAC5B,CAAC;EAED,MAAMI,eAAe,GAAIP,IAAU,IAAK;IACtCI,QAAQ,CAACb,YAAY,CAACiB,QAAQ,CAACR,IAAI,CAAC,CAAC;EACvC,CAAC;EAED,oBACEJ,OAAA,CAAAE,SAAA;IAAAW,QAAA,gBACEb,OAAA;MACEc,KAAK,EAAC,WAAW;MACjBC,SAAS,EAAC,yGAAyG;MACnHC,OAAO,EAAEN,iBAAkB;MAAAG,QAAA,eAE3Bb,OAAA,CAACF,UAAU;QAACiB,SAAS,EAAC;MAAuB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C,CAAC,EACRd,iBAAiB,iBAChBN,OAAA,CAACJ,eAAe;MACdyB,OAAO,EAAEZ,kBAAmB;MAC5BL,IAAI,EAAEA,IAAK;MACXkB,QAAQ,EAAC,WAAW;MACpBC,SAAS,EAAEZ;IAAgB;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CACF;EAAA,eACD,CAAC;AAEP,CAAC;AAACf,EAAA,CAnCIF,WAAqC;EAAA,QAExBT,cAAc;AAAA;AAAA8B,EAAA,GAF3BrB,WAAqC;AAqC3C,eAAeA,WAAW;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}