{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\\\u0414\\u0438\\u043F\\u043B\\u043E\\u043C\\u043D\\u0430\\u044F\\\\ToDo-app-main\\\\src\\\\components\\\\Utilities\\\\LayoutRoutes.tsx\";\nimport React, { useState } from \"react\";\nimport { useAppDispatch } from \"../../store/hooks\";\nimport { modalActions } from \"../../store/Modal.store\";\nimport useSortTasks from \"../hooks/useSortTasks\";\nimport ButtonsSort from \"../TasksSection/ButtonsSort\";\nimport TaskItem from \"../TasksSection/TaskItem/TaskItem\";\nconst LayoutRoutes = ({\n  title,\n  tasks\n}) => {\n  const [isListInView1, setIsListInView1] = useState(false);\n  const dispatch = useAppDispatch();\n  const {\n    sortedBy,\n    setSortedBy,\n    sortedTasks\n  } = useSortTasks(tasks);\n  const openModalHandler = () => {\n    dispatch(modalActions.openModalCreateTask());\n  };\n  const tasksTitle = `${title} (${tasks.length} ${tasks.length === 1 ? \"task\" : \"tasks\"})`;\n  return /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"font-medium my-5 text-center sm:text-left sm:my-8 md:text-2xl text-lg dark:text-slate-200\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, tasksTitle), /*#__PURE__*/React.createElement(ButtonsSort, {\n    isListInView1: isListInView1,\n    setIsListInView1: setIsListInView1,\n    sortedBy: sortedBy,\n    setSortedBy: setSortedBy,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"ul\", {\n    className: `tasksList mt-4 grid gap-2 sm:gap-4 xl:gap-6 ${isListInView1 ? \"grid-cols-1\" : \"2xl:grid-cols-4 xl:grid-cols-3 lg:grid-cols-4 md:grid-cols-3 grid-cols-2 items-end\"}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, sortedTasks.map(task => /*#__PURE__*/React.createElement(TaskItem, {\n    key: task.id,\n    isListInView1: isListInView1,\n    task: task,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: openModalHandler,\n    className: `border-2 border-slate-300\n             text-slate-400 w-full rounded-lg\n              border-dashed transition hover:bg-slate-300\n               hover:text-slate-500\n               dark:border-slate-700 dark:hover:bg-slate-800 dark:hover:text-slate-300 ${isListInView1 ? \"h-20 sm:h-32\" : \"h-52 sm:h-64\"}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, \"Add new task\"))));\n};\nexport default React.memo(LayoutRoutes);","map":{"version":3,"names":["React","useState","useAppDispatch","modalActions","useSortTasks","ButtonsSort","TaskItem","LayoutRoutes","title","tasks","isListInView1","setIsListInView1","dispatch","sortedBy","setSortedBy","sortedTasks","openModalHandler","openModalCreateTask","tasksTitle","length","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","className","map","task","key","id","onClick","memo"],"sources":["C:/Users/Admin/Desktop/Дипломная/ToDo-app-main/src/components/Utilities/LayoutRoutes.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Task } from \"../../interfaces\";\nimport { useAppDispatch } from \"../../store/hooks\";\nimport { modalActions } from \"../../store/Modal.store\";\nimport useSortTasks from \"../hooks/useSortTasks\";\nimport ButtonsSort from \"../TasksSection/ButtonsSort\";\nimport TaskItem from \"../TasksSection/TaskItem/TaskItem\";\n\ntype Props = {\n  title: string;\n  tasks: Task[] | [];\n};\n\nconst LayoutRoutes: React.FC<Props> = ({ title, tasks }) => {\n  const [isListInView1, setIsListInView1] = useState<boolean>(false);\n\n  const dispatch = useAppDispatch();\n\n  const { sortedBy, setSortedBy, sortedTasks } = useSortTasks(tasks);\n\n  const openModalHandler = () => {\n    dispatch(modalActions.openModalCreateTask());\n  };\n\n  const tasksTitle = `${title} (${tasks.length} ${\n    tasks.length === 1 ? \"task\" : \"tasks\"\n  })`;\n\n  return (\n    <section>\n      <h1 className=\"font-medium my-5 text-center sm:text-left sm:my-8 md:text-2xl text-lg dark:text-slate-200\">\n        {tasksTitle}\n      </h1>\n      <ButtonsSort\n        isListInView1={isListInView1}\n        setIsListInView1={setIsListInView1}\n        sortedBy={sortedBy}\n        setSortedBy={setSortedBy}\n      />\n      <ul\n        className={`tasksList mt-4 grid gap-2 sm:gap-4 xl:gap-6 ${\n          isListInView1\n            ? \"grid-cols-1\"\n            : \"2xl:grid-cols-4 xl:grid-cols-3 lg:grid-cols-4 md:grid-cols-3 grid-cols-2 items-end\"\n        }`}\n      >\n        {sortedTasks.map((task) => (\n          <TaskItem key={task.id} isListInView1={isListInView1} task={task} />\n        ))}\n        <li>\n          <button\n            onClick={openModalHandler}\n            className={`border-2 border-slate-300\n             text-slate-400 w-full rounded-lg\n              border-dashed transition hover:bg-slate-300\n               hover:text-slate-500\n               dark:border-slate-700 dark:hover:bg-slate-800 dark:hover:text-slate-300 ${\n                 isListInView1 ? \"h-20 sm:h-32\" : \"h-52 sm:h-64\"\n               }`}\n          >\n            Add new task\n          </button>\n        </li>\n      </ul>\n    </section>\n  );\n};\n\nexport default React.memo(LayoutRoutes);\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,SAASC,cAAc,QAAQ,mBAAmB;AAClD,SAASC,YAAY,QAAQ,yBAAyB;AACtD,OAAOC,YAAY,MAAM,uBAAuB;AAChD,OAAOC,WAAW,MAAM,6BAA6B;AACrD,OAAOC,QAAQ,MAAM,mCAAmC;AAOxD,MAAMC,YAA6B,GAAGA,CAAC;EAAEC,KAAK;EAAEC;AAAM,CAAC,KAAK;EAC1D,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGV,QAAQ,CAAU,KAAK,CAAC;EAElE,MAAMW,QAAQ,GAAGV,cAAc,CAAC,CAAC;EAEjC,MAAM;IAAEW,QAAQ;IAAEC,WAAW;IAAEC;EAAY,CAAC,GAAGX,YAAY,CAACK,KAAK,CAAC;EAElE,MAAMO,gBAAgB,GAAGA,CAAA,KAAM;IAC7BJ,QAAQ,CAACT,YAAY,CAACc,mBAAmB,CAAC,CAAC,CAAC;EAC9C,CAAC;EAED,MAAMC,UAAU,GAAI,GAAEV,KAAM,KAAIC,KAAK,CAACU,MAAO,IAC3CV,KAAK,CAACU,MAAM,KAAK,CAAC,GAAG,MAAM,GAAG,OAC/B,GAAE;EAEH,oBACEnB,KAAA,CAAAoB,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACE1B,KAAA,CAAAoB,aAAA;IAAIO,SAAS,EAAC,2FAA2F;IAAAN,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACtGR,UACC,CAAC,eACLlB,KAAA,CAAAoB,aAAA,CAACf,WAAW;IACVK,aAAa,EAAEA,aAAc;IAC7BC,gBAAgB,EAAEA,gBAAiB;IACnCE,QAAQ,EAAEA,QAAS;IACnBC,WAAW,EAAEA,WAAY;IAAAO,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAC1B,CAAC,eACF1B,KAAA,CAAAoB,aAAA;IACEO,SAAS,EAAG,+CACVjB,aAAa,GACT,aAAa,GACb,oFACL,EAAE;IAAAW,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAEFX,WAAW,CAACa,GAAG,CAAEC,IAAI,iBACpB7B,KAAA,CAAAoB,aAAA,CAACd,QAAQ;IAACwB,GAAG,EAAED,IAAI,CAACE,EAAG;IAACrB,aAAa,EAAEA,aAAc;IAACmB,IAAI,EAAEA,IAAK;IAAAR,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CACpE,CAAC,eACF1B,KAAA,CAAAoB,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACE1B,KAAA,CAAAoB,aAAA;IACEY,OAAO,EAAEhB,gBAAiB;IAC1BW,SAAS,EAAG;AACxB;AACA;AACA;AACA,yFACiBjB,aAAa,GAAG,cAAc,GAAG,cAClC,EAAE;IAAAW,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACP,cAEO,CACN,CACF,CACG,CAAC;AAEd,CAAC;AAED,eAAe1B,KAAK,CAACiC,IAAI,CAAC1B,YAAY,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}