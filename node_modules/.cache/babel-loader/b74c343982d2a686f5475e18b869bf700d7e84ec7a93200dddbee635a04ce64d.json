{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\\\u0414\\u0438\\u043F\\u043B\\u043E\\u043C\\u043D\\u0430\\u044F\\\\ToDo-app-main\\\\src\\\\components\\\\TasksSection\\\\TaskItem\\\\BtnDeleteTask.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useAppDispatch } from \"../../../store/hooks\";\nimport { tasksActions } from \"../../../store/Tasks.store\";\nimport ModalConfirm from \"../../Utilities/ModalConfirm\";\nimport { ReactComponent as Trash } from \"../../../assets/trash.svg\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst BtnDeleteTask = ({\n  taskId\n}) => {\n  _s();\n  const [showModal, setIsModalShown] = useState(false);\n  const dispatch = useAppDispatch();\n  const removeTaskHandler = () => {\n    dispatch(tasksActions.removeTask(taskId));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [showModal && /*#__PURE__*/_jsxDEV(ModalConfirm, {\n      onClose: () => setIsModalShown(false),\n      text: \"This task will be deleted permanently.\",\n      onConfirm: removeTaskHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setIsModalShown(true),\n      title: \"delete task\",\n      className: \"ml-2 transition hover:text-slate-700 dark:hover:text-slate-200\",\n      children: /*#__PURE__*/_jsxDEV(Trash, {\n        className: \"w-5 h-5 sm:w-6 sm:h-6\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(BtnDeleteTask, \"qFlJikwyXrgzt7XLzU/1VNZd4bk=\", false, function () {\n  return [useAppDispatch];\n});\n_c = BtnDeleteTask;\nexport default _c2 = /*#__PURE__*/React.memo(BtnDeleteTask);\nvar _c, _c2;\n$RefreshReg$(_c, \"BtnDeleteTask\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useState","useAppDispatch","tasksActions","ModalConfirm","ReactComponent","Trash","jsxDEV","_jsxDEV","Fragment","_Fragment","BtnDeleteTask","taskId","_s","showModal","setIsModalShown","dispatch","removeTaskHandler","removeTask","children","onClose","text","onConfirm","fileName","_jsxFileName","lineNumber","columnNumber","onClick","title","className","_c","_c2","memo","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/Дипломная/ToDo-app-main/src/components/TasksSection/TaskItem/BtnDeleteTask.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useAppDispatch } from \"../../../store/hooks\";\nimport { tasksActions } from \"../../../store/Tasks.store\";\nimport ModalConfirm from \"../../Utilities/ModalConfirm\";\nimport { ReactComponent as Trash } from \"../../../assets/trash.svg\";\n\nconst BtnDeleteTask: React.FC<{ taskId: string }> = ({ taskId }) => {\n  const [showModal, setIsModalShown] = useState<boolean>(false);\n  const dispatch = useAppDispatch();\n\n  const removeTaskHandler = () => {\n    dispatch(tasksActions.removeTask(taskId));\n  };\n  return (\n    <>\n      {showModal && (\n        <ModalConfirm\n          onClose={() => setIsModalShown(false)}\n          text=\"This task will be deleted permanently.\"\n          onConfirm={removeTaskHandler}\n        />\n      )}\n      <button\n        onClick={() => setIsModalShown(true)}\n        title=\"delete task\"\n        className=\"ml-2 transition hover:text-slate-700 dark:hover:text-slate-200\"\n      >\n        <Trash className=\"w-5 h-5 sm:w-6 sm:h-6\" />\n      </button>\n    </>\n  );\n};\n\nexport default React.memo(BtnDeleteTask);\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,cAAc,QAAQ,sBAAsB;AACrD,SAASC,YAAY,QAAQ,4BAA4B;AACzD,OAAOC,YAAY,MAAM,8BAA8B;AACvD,SAASC,cAAc,IAAIC,KAAK,QAAQ,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEpE,MAAMC,aAA2C,GAAGA,CAAC;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EAClE,MAAM,CAACC,SAAS,EAAEC,eAAe,CAAC,GAAGd,QAAQ,CAAU,KAAK,CAAC;EAC7D,MAAMe,QAAQ,GAAGd,cAAc,CAAC,CAAC;EAEjC,MAAMe,iBAAiB,GAAGA,CAAA,KAAM;IAC9BD,QAAQ,CAACb,YAAY,CAACe,UAAU,CAACN,MAAM,CAAC,CAAC;EAC3C,CAAC;EACD,oBACEJ,OAAA,CAAAE,SAAA;IAAAS,QAAA,GACGL,SAAS,iBACRN,OAAA,CAACJ,YAAY;MACXgB,OAAO,EAAEA,CAAA,KAAML,eAAe,CAAC,KAAK,CAAE;MACtCM,IAAI,EAAC,wCAAwC;MAC7CC,SAAS,EAAEL;IAAkB;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CACF,eACDlB,OAAA;MACEmB,OAAO,EAAEA,CAAA,KAAMZ,eAAe,CAAC,IAAI,CAAE;MACrCa,KAAK,EAAC,aAAa;MACnBC,SAAS,EAAC,gEAAgE;MAAAV,QAAA,eAE1EX,OAAA,CAACF,KAAK;QAACuB,SAAS,EAAC;MAAuB;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrC,CAAC;EAAA,eACT,CAAC;AAEP,CAAC;AAACb,EAAA,CAzBIF,aAA2C;EAAA,QAE9BT,cAAc;AAAA;AAAA4B,EAAA,GAF3BnB,aAA2C;AA2BjD,eAAAoB,GAAA,gBAAe/B,KAAK,CAACgC,IAAI,CAACrB,aAAa,CAAC;AAAC,IAAAmB,EAAA,EAAAC,GAAA;AAAAE,YAAA,CAAAH,EAAA;AAAAG,YAAA,CAAAF,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}