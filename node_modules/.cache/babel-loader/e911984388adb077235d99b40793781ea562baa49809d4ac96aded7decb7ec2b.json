{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { useAppSelector } from \"../../store/hooks\";\nconst useTodayTasks = () => {\n  _s();\n  const tasks = useAppSelector(state => state.tasks.tasks);\n  const [todaysTasks, setTodaysTasks] = useState([]);\n  const date = new Date();\n  const year = date.getFullYear();\n  const month = date.getMonth() + 1;\n  const day = date.getDate();\n  const dateTimeFormat = `${year}-${month.toString().padStart(2, \"0\")}-${day.toString().padStart(2, \"0\")}`;\n  useEffect(() => {\n    let filteredTasks = tasks.filter(task => task.date === dateTimeFormat);\n    setTodaysTasks(filteredTasks);\n  }, [dateTimeFormat, tasks]);\n  return todaysTasks;\n};\n_s(useTodayTasks, \"vHxIlPhbyD5kdTkPJwnvr5ZvBq4=\", false, function () {\n  return [useAppSelector];\n});\nexport default useTodayTasks;","map":{"version":3,"names":["useState","useEffect","useAppSelector","useTodayTasks","_s","tasks","state","todaysTasks","setTodaysTasks","date","Date","year","getFullYear","month","getMonth","day","getDate","dateTimeFormat","toString","padStart","filteredTasks","filter","task"],"sources":["C:/Users/Admin/Desktop/Дипломная/ToDo-app-main/src/components/hooks/useTodayTasks.tsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { Task } from \"../../interfaces\";\nimport { useAppSelector } from \"../../store/hooks\";\n\nconst useTodayTasks = (): Task[] => {\n  const tasks = useAppSelector((state) => state.tasks.tasks);\n  const [todaysTasks, setTodaysTasks] = useState<Task[]>([]);\n\n  const date: Date = new Date();\n  const year: number = date.getFullYear();\n  const month: number = date.getMonth() + 1;\n  const day: number = date.getDate();\n\n  const dateTimeFormat = `${year}-${month.toString().padStart(2, \"0\")}-${day\n    .toString()\n    .padStart(2, \"0\")}`;\n\n  useEffect(() => {\n    let filteredTasks: Task[] = tasks.filter(\n      (task: Task) => task.date === dateTimeFormat\n    );\n    setTodaysTasks(filteredTasks);\n  }, [dateTimeFormat, tasks]);\n  return todaysTasks;\n};\n\nexport default useTodayTasks;\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,SAASC,cAAc,QAAQ,mBAAmB;AAElD,MAAMC,aAAa,GAAGA,CAAA,KAAc;EAAAC,EAAA;EAClC,MAAMC,KAAK,GAAGH,cAAc,CAAEI,KAAK,IAAKA,KAAK,CAACD,KAAK,CAACA,KAAK,CAAC;EAC1D,MAAM,CAACE,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAS,EAAE,CAAC;EAE1D,MAAMS,IAAU,GAAG,IAAIC,IAAI,CAAC,CAAC;EAC7B,MAAMC,IAAY,GAAGF,IAAI,CAACG,WAAW,CAAC,CAAC;EACvC,MAAMC,KAAa,GAAGJ,IAAI,CAACK,QAAQ,CAAC,CAAC,GAAG,CAAC;EACzC,MAAMC,GAAW,GAAGN,IAAI,CAACO,OAAO,CAAC,CAAC;EAElC,MAAMC,cAAc,GAAI,GAAEN,IAAK,IAAGE,KAAK,CAACK,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAE,IAAGJ,GAAG,CACvEG,QAAQ,CAAC,CAAC,CACVC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAE,EAAC;EAErBlB,SAAS,CAAC,MAAM;IACd,IAAImB,aAAqB,GAAGf,KAAK,CAACgB,MAAM,CACrCC,IAAU,IAAKA,IAAI,CAACb,IAAI,KAAKQ,cAChC,CAAC;IACDT,cAAc,CAACY,aAAa,CAAC;EAC/B,CAAC,EAAE,CAACH,cAAc,EAAEZ,KAAK,CAAC,CAAC;EAC3B,OAAOE,WAAW;AACpB,CAAC;AAACH,EAAA,CApBID,aAAa;EAAA,QACHD,cAAc;AAAA;AAqB9B,eAAeC,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}