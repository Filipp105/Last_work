{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\\\u0414\\u0438\\u043F\\u043B\\u043E\\u043C\\u043D\\u0430\\u044F\\\\ToDo-app-main\\\\src\\\\components\\\\Routes\\\\SearchResults.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\nimport useDescriptionTitle from \"../hooks/useDescriptionTitle\";\nimport useSearchQuery from \"../hooks/useSearchQuery\";\nimport LayoutRoutes from \"../Utilities/LayoutRoutes\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchResults = () => {\n  _s();\n  const [searchParams] = useSearchParams();\n  const navigate = useNavigate();\n  const [currQueryParam, setCurrQueryParam] = useState(\"\");\n  useEffect(() => {\n    const query = searchParams.get(\"q\");\n    if (!query) {\n      // se \"q\" for igual a '' ou \"q\" não existir\n      navigate(\"/\");\n    } else {\n      setCurrQueryParam(query);\n    }\n  }, [navigate, searchParams]);\n  const matchedTasks = useSearchQuery(currQueryParam);\n  const title = `Results for \"${currQueryParam}\"`;\n  useDescriptionTitle(title, title);\n  return /*#__PURE__*/_jsxDEV(LayoutRoutes, {\n    title: title,\n    tasks: matchedTasks\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 10\n  }, this);\n};\n_s(SearchResults, \"NDEtFe9MkrP3yVkZVGOwtCM/v2Q=\", false, function () {\n  return [useSearchParams, useNavigate, useSearchQuery, useDescriptionTitle];\n});\n_c = SearchResults;\nexport default SearchResults;\nvar _c;\n$RefreshReg$(_c, \"SearchResults\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","useSearchParams","useDescriptionTitle","useSearchQuery","LayoutRoutes","jsxDEV","_jsxDEV","SearchResults","_s","searchParams","navigate","currQueryParam","setCurrQueryParam","query","get","matchedTasks","title","tasks","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/Дипломная/ToDo-app-main/src/components/Routes/SearchResults.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\nimport useDescriptionTitle from \"../hooks/useDescriptionTitle\";\nimport useSearchQuery from \"../hooks/useSearchQuery\";\nimport LayoutRoutes from \"../Utilities/LayoutRoutes\";\n\nconst SearchResults: React.FC = () => {\n  const [searchParams] = useSearchParams();\n  const navigate = useNavigate();\n\n  const [currQueryParam, setCurrQueryParam] = useState<string>(\"\");\n\n  useEffect(() => {\n    const query = searchParams.get(\"q\");\n    if (!query) {\n      // se \"q\" for igual a '' ou \"q\" não existir\n      navigate(\"/\");\n    } else {\n      setCurrQueryParam(query);\n    }\n  }, [navigate, searchParams]);\n\n  const matchedTasks = useSearchQuery(currQueryParam);\n\n  const title = `Results for \"${currQueryParam}\"`;\n\n  useDescriptionTitle(title, title);\n\n  return <LayoutRoutes title={title} tasks={matchedTasks}></LayoutRoutes>;\n};\n\nexport default SearchResults;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,eAAe,QAAQ,kBAAkB;AAC/D,OAAOC,mBAAmB,MAAM,8BAA8B;AAC9D,OAAOC,cAAc,MAAM,yBAAyB;AACpD,OAAOC,YAAY,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,MAAMC,aAAuB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpC,MAAM,CAACC,YAAY,CAAC,GAAGR,eAAe,CAAC,CAAC;EACxC,MAAMS,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAE9B,MAAM,CAACW,cAAc,EAAEC,iBAAiB,CAAC,GAAGb,QAAQ,CAAS,EAAE,CAAC;EAEhED,SAAS,CAAC,MAAM;IACd,MAAMe,KAAK,GAAGJ,YAAY,CAACK,GAAG,CAAC,GAAG,CAAC;IACnC,IAAI,CAACD,KAAK,EAAE;MACV;MACAH,QAAQ,CAAC,GAAG,CAAC;IACf,CAAC,MAAM;MACLE,iBAAiB,CAACC,KAAK,CAAC;IAC1B;EACF,CAAC,EAAE,CAACH,QAAQ,EAAED,YAAY,CAAC,CAAC;EAE5B,MAAMM,YAAY,GAAGZ,cAAc,CAACQ,cAAc,CAAC;EAEnD,MAAMK,KAAK,GAAI,gBAAeL,cAAe,GAAE;EAE/CT,mBAAmB,CAACc,KAAK,EAAEA,KAAK,CAAC;EAEjC,oBAAOV,OAAA,CAACF,YAAY;IAACY,KAAK,EAAEA,KAAM;IAACC,KAAK,EAAEF;EAAa;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAe,CAAC;AACzE,CAAC;AAACb,EAAA,CAvBID,aAAuB;EAAA,QACJN,eAAe,EACrBD,WAAW,EAcPG,cAAc,EAInCD,mBAAmB;AAAA;AAAAoB,EAAA,GApBff,aAAuB;AAyB7B,eAAeA,aAAa;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}