{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\\\u0414\\u0438\\u043F\\u043B\\u043E\\u043C\\u043D\\u0430\\u044F\\\\ToDo-app-main\\\\src\\\\components\\\\Utilities\\\\Modal.tsx\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ReactComponent as SvgX } from \"../../assets/x.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ModalContent = ({\n  children,\n  onClose,\n  title\n}) => {\n  const closeModalHandler = event => {\n    if (event.target === event.currentTarget) {\n      onClose();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"xl:text-base sm:text-sm text-xs fixed bg-slate-600/[.2] w-full h-full z-40 grid place-items-center px-2 text-slate-600 dark:text-slate-200\",\n    onClick: closeModalHandler,\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"relative bg-slate-200 max-w-lg w-full rounded-lg p-3 sm:p-5 flex flex-col justify-start dark:bg-slate-900\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        \"aria-label\": \"close alert\",\n        className: \"absolute right-3 sm:right-4\",\n        onClick: onClose,\n        children: /*#__PURE__*/_jsxDEV(SvgX, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"font-medium mb-5 text-lg md:text-2xl\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), children]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_c = ModalContent;\nconst modalElement = document.getElementById(\"modal\");\nconst Modal = ({\n  children,\n  onClose,\n  title\n}) => {\n  return /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxDEV(ModalContent, {\n    children: children,\n    onClose: onClose,\n    title: title\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this), modalElement);\n};\n_c2 = Modal;\nexport default Modal;\nvar _c, _c2;\n$RefreshReg$(_c, \"ModalContent\");\n$RefreshReg$(_c2, \"Modal\");","map":{"version":3,"names":["React","ReactDOM","ReactComponent","SvgX","jsxDEV","_jsxDEV","ModalContent","children","onClose","title","closeModalHandler","event","target","currentTarget","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","modalElement","document","getElementById","Modal","createPortal","_c2","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/Дипломная/ToDo-app-main/src/components/Utilities/Modal.tsx"],"sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ReactComponent as SvgX } from \"../../assets/x.svg\";\n\nconst ModalContent: React.FC<{\n  children: React.ReactNode;\n  onClose: () => void;\n  title: string;\n}> = ({ children, onClose, title }) => {\n  const closeModalHandler = (event: React.MouseEvent) => {\n    if (event.target === event.currentTarget) {\n      onClose();\n    }\n  };\n\n  return (\n    <div\n      className=\"xl:text-base sm:text-sm text-xs fixed bg-slate-600/[.2] w-full h-full z-40 grid place-items-center px-2 text-slate-600 dark:text-slate-200\"\n      onClick={closeModalHandler}\n    >\n      <section className=\"relative bg-slate-200 max-w-lg w-full rounded-lg p-3 sm:p-5 flex flex-col justify-start dark:bg-slate-900\">\n        <button\n          aria-label=\"close alert\"\n          className=\"absolute right-3 sm:right-4\"\n          onClick={onClose}\n        >\n          <SvgX />\n        </button>\n        <h2 className=\"font-medium mb-5 text-lg md:text-2xl\">{title}</h2>\n        {children}\n      </section>\n    </div>\n  );\n};\n\nconst modalElement = document.getElementById(\"modal\")! as HTMLElement;\n\nconst Modal: React.FC<{\n  children: React.ReactNode;\n  onClose: () => void;\n  title: string;\n}> = ({ children, onClose, title }) => {\n  return ReactDOM.createPortal(\n    <ModalContent children={children} onClose={onClose} title={title} />,\n    modalElement\n  );\n};\n\nexport default Modal;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,WAAW;AAChC,SAASC,cAAc,IAAIC,IAAI,QAAQ,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5D,MAAMC,YAIJ,GAAGA,CAAC;EAAEC,QAAQ;EAAEC,OAAO;EAAEC;AAAM,CAAC,KAAK;EACrC,MAAMC,iBAAiB,GAAIC,KAAuB,IAAK;IACrD,IAAIA,KAAK,CAACC,MAAM,KAAKD,KAAK,CAACE,aAAa,EAAE;MACxCL,OAAO,CAAC,CAAC;IACX;EACF,CAAC;EAED,oBACEH,OAAA;IACES,SAAS,EAAC,4IAA4I;IACtJC,OAAO,EAAEL,iBAAkB;IAAAH,QAAA,eAE3BF,OAAA;MAASS,SAAS,EAAC,2GAA2G;MAAAP,QAAA,gBAC5HF,OAAA;QACE,cAAW,aAAa;QACxBS,SAAS,EAAC,6BAA6B;QACvCC,OAAO,EAAEP,OAAQ;QAAAD,QAAA,eAEjBF,OAAA,CAACF,IAAI;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC,eACTd,OAAA;QAAIS,SAAS,EAAC,sCAAsC;QAAAP,QAAA,EAAEE;MAAK;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,EAChEZ,QAAQ;IAAA;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEV,CAAC;AAACC,EAAA,GA7BId,YAIJ;AA2BF,MAAMe,YAAY,GAAGC,QAAQ,CAACC,cAAc,CAAC,OAAO,CAAiB;AAErE,MAAMC,KAIJ,GAAGA,CAAC;EAAEjB,QAAQ;EAAEC,OAAO;EAAEC;AAAM,CAAC,KAAK;EACrC,oBAAOR,QAAQ,CAACwB,YAAY,eAC1BpB,OAAA,CAACC,YAAY;IAACC,QAAQ,EAAEA,QAAS;IAACC,OAAO,EAAEA,OAAQ;IAACC,KAAK,EAAEA;EAAM;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,EACpEE,YACF,CAAC;AACH,CAAC;AAACK,GAAA,GATIF,KAIJ;AAOF,eAAeA,KAAK;AAAC,IAAAJ,EAAA,EAAAM,GAAA;AAAAC,YAAA,CAAAP,EAAA;AAAAO,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}