{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\\\u0414\\u0438\\u043F\\u043B\\u043E\\u043C\\u043D\\u0430\\u044F\\\\ToDo-app-main\\\\src\\\\components\\\\Menu\\\\Directories\\\\ItemDirectory.tsx\";\nimport React, { useState } from \"react\";\nimport { NavLink, useLocation } from \"react-router-dom\";\nimport { useAppDispatch } from \"../../../store/hooks\";\nimport { tasksActions } from \"../../../store/Tasks.store\";\nimport { ReactComponent as Trash } from \"@svgr/webpack?-svgo,+ref!../../../assets/trash.svg\";\nimport { ReactComponent as Edit } from \"@svgr/webpack?-svgo,+ref!../../../assets/edit.svg\";\nimport ModalConfirm from \"../../Utilities/ModalConfirm\";\nimport ModalDirectory from \"../../Utilities/ModalDirectory\";\nconst ItemDirectory = ({\n  dir,\n  classActive\n}) => {\n  const route = useLocation();\n  const currentPath = route.pathname;\n  const dispatch = useAppDispatch();\n  const [modalIsShown, setModalIsShown] = useState(false);\n  const [modalDirIsShown, setModalDirIsShown] = useState(false);\n  const closeModalDirectoryHandler = () => {\n    setModalDirIsShown(false);\n  };\n  const deleteDirectoryHandler = () => {\n    dispatch(tasksActions.deleteDirectory(dir));\n  };\n  const confirmEditDirNameHandler = dirName => {\n    dispatch(tasksActions.editDirectoryName({\n      previousDirName: dir,\n      newDirName: dirName\n    }));\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, modalDirIsShown && /*#__PURE__*/React.createElement(ModalDirectory, {\n    onClose: closeModalDirectoryHandler,\n    onConfirm: confirmEditDirNameHandler,\n    dirName: dir,\n    title: \"Edit directory name\",\n    btnText: \"Edit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }), modalIsShown && /*#__PURE__*/React.createElement(ModalConfirm, {\n    onClose: () => setModalIsShown(false),\n    onConfirm: deleteDirectoryHandler,\n    text: \"This directory and all its tasks will be deleted.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"li\", {\n    className: `flex items-center pr-4 pl-9 py-2 itemDirectory ${currentPath === \"/dir/\" + dir ? classActive : \"\"}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    to: `/dir/${dir}`,\n    title: dir,\n    className: \"hover:text-rose-600 dark:hover:text-slate-200 transition text-ellipsis whitespace-nowrap overflow-hidden max-w-[7rem]\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, dir), dir !== \"Main\" && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ml-auto buttonsDir\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    title: \"edit directory name\",\n    onClick: () => setModalDirIsShown(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Edit, {\n    className: \"w-5 h-5 mr-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    title: \"delete directory\",\n    onClick: () => setModalIsShown(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Trash, {\n    className: \"w-5 h-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 15\n    }\n  })))));\n};\nexport default ItemDirectory;","map":{"version":3,"names":["React","useState","NavLink","useLocation","useAppDispatch","tasksActions","ReactComponent","Trash","Edit","ModalConfirm","ModalDirectory","ItemDirectory","dir","classActive","route","currentPath","pathname","dispatch","modalIsShown","setModalIsShown","modalDirIsShown","setModalDirIsShown","closeModalDirectoryHandler","deleteDirectoryHandler","deleteDirectory","confirmEditDirNameHandler","dirName","editDirectoryName","previousDirName","newDirName","createElement","Fragment","onClose","onConfirm","title","btnText","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","text","className","to","onClick"],"sources":["C:/Users/Admin/Desktop/Дипломная/ToDo-app-main/src/components/Menu/Directories/ItemDirectory.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { NavLink, useLocation } from \"react-router-dom\";\nimport { useAppDispatch } from \"../../../store/hooks\";\nimport { tasksActions } from \"../../../store/Tasks.store\";\nimport { ReactComponent as Trash } from \"../../../assets/trash.svg\";\nimport { ReactComponent as Edit } from \"../../../assets/edit.svg\";\nimport ModalConfirm from \"../../Utilities/ModalConfirm\";\nimport ModalDirectory from \"../../Utilities/ModalDirectory\";\n\nconst ItemDirectory: React.FC<{ dir: string; classActive: string }> = ({\n  dir,\n  classActive,\n}) => {\n  const route = useLocation();\n  const currentPath = route.pathname;\n\n  const dispatch = useAppDispatch();\n\n  const [modalIsShown, setModalIsShown] = useState<boolean>(false);\n  const [modalDirIsShown, setModalDirIsShown] = useState<boolean>(false);\n\n  const closeModalDirectoryHandler = () => {\n    setModalDirIsShown(false);\n  };\n\n  const deleteDirectoryHandler = () => {\n    dispatch(tasksActions.deleteDirectory(dir));\n  };\n\n  const confirmEditDirNameHandler = (dirName: string) => {\n    dispatch(\n      tasksActions.editDirectoryName({\n        previousDirName: dir,\n        newDirName: dirName,\n      })\n    );\n  };\n\n  return (\n    <>\n      {modalDirIsShown && (\n        <ModalDirectory\n          onClose={closeModalDirectoryHandler}\n          onConfirm={confirmEditDirNameHandler}\n          dirName={dir}\n          title=\"Edit directory name\"\n          btnText=\"Edit\"\n        />\n      )}\n      {modalIsShown && (\n        <ModalConfirm\n          onClose={() => setModalIsShown(false)}\n          onConfirm={deleteDirectoryHandler}\n          text=\"This directory and all its tasks will be deleted.\"\n        />\n      )}\n      <li\n        className={`flex items-center pr-4 pl-9 py-2 itemDirectory ${\n          currentPath === \"/dir/\" + dir ? classActive : \"\"\n        }`}\n      >\n        <NavLink\n          to={`/dir/${dir}`}\n          title={dir}\n          className=\"hover:text-rose-600 dark:hover:text-slate-200 transition text-ellipsis whitespace-nowrap overflow-hidden max-w-[7rem]\"\n        >\n          {dir}\n        </NavLink>\n\n        {dir !== \"Main\" && (\n          <div className=\"ml-auto buttonsDir\">\n            <button\n              title=\"edit directory name\"\n              onClick={() => setModalDirIsShown(true)}\n            >\n              <Edit className=\"w-5 h-5 mr-2\" />\n            </button>\n            <button\n              title=\"delete directory\"\n              onClick={() => setModalIsShown(true)}\n            >\n              <Trash className=\"w-5 h-5\" />\n            </button>\n          </div>\n        )}\n      </li>\n    </>\n  );\n};\n\nexport default ItemDirectory;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}