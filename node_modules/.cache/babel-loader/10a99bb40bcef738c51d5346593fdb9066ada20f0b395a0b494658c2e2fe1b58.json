{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\\\u0414\\u0438\\u043F\\u043B\\u043E\\u043C\\u043D\\u0430\\u044F\\\\ToDo-app-main\\\\src\\\\components\\\\TasksSection\\\\TaskItem\\\\BtnToggleCompleted.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useAppDispatch } from \"../../../store/hooks\";\nimport { tasksActions } from \"../../../store/Tasks.store\";\nimport { ReactComponent as SvgX } from \"../../../assets/x.svg\";\nimport { ReactComponent as Check } from \"../../../assets/check.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BtnToggleCompleted = ({\n  taskCompleted,\n  taskId,\n  isListInView1\n}) => {\n  _s();\n  const dispatch = useAppDispatch();\n  const toggleTaskCompleted = id => {\n    dispatch(tasksActions.toggleTaskCompleted(id));\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    title: taskCompleted ? \"mark as uncompleted\" : \"mark as completed\",\n    className: `${taskCompleted ? \"bg-emerald-200 text-emerald-800 \" : \"bg-amber-200 text-amber-800 \"} ${isListInView1 ? \"mr-4\" : \"mr-4 order-0\"} rounded-full font-medium`,\n    onClick: () => toggleTaskCompleted(taskId),\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"block py-1 px-3 absolute invisible sm:static sm:visible\",\n      children: taskCompleted ? \"completed\" : \"uncompleted\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \" sm:hidden w-6 h-6 grid place-items-center\",\n      children: taskCompleted ? /*#__PURE__*/_jsxDEV(Check, {\n        className: \"w-3 h-3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(SvgX, {\n        className: \"w-3 h-3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(BtnToggleCompleted, \"BJQ1DUn/XFEl2NsQ3DWyHAXfnkY=\", false, function () {\n  return [useAppDispatch];\n});\n_c = BtnToggleCompleted;\nexport default _c2 = /*#__PURE__*/React.memo(BtnToggleCompleted);\nvar _c, _c2;\n$RefreshReg$(_c, \"BtnToggleCompleted\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useAppDispatch","tasksActions","ReactComponent","SvgX","Check","jsxDEV","_jsxDEV","BtnToggleCompleted","taskCompleted","taskId","isListInView1","_s","dispatch","toggleTaskCompleted","id","title","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","_c2","memo","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/Дипломная/ToDo-app-main/src/components/TasksSection/TaskItem/BtnToggleCompleted.tsx"],"sourcesContent":["import React from \"react\";\nimport { useAppDispatch } from \"../../../store/hooks\";\nimport { tasksActions } from \"../../../store/Tasks.store\";\nimport { ReactComponent as SvgX } from \"../../../assets/x.svg\";\nimport { ReactComponent as Check } from \"../../../assets/check.svg\";\n\nconst BtnToggleCompleted: React.FC<{\n  taskCompleted: boolean;\n  taskId: string;\n  isListInView1: boolean;\n}> = ({ taskCompleted, taskId, isListInView1 }) => {\n  const dispatch = useAppDispatch();\n\n  const toggleTaskCompleted = (id: string) => {\n    dispatch(tasksActions.toggleTaskCompleted(id));\n  };\n\n  return (\n    <button\n      title={taskCompleted ? \"mark as uncompleted\" : \"mark as completed\"}\n      className={`${\n        taskCompleted\n          ? \"bg-emerald-200 text-emerald-800 \"\n          : \"bg-amber-200 text-amber-800 \"\n      } ${isListInView1 ? \"mr-4\" : \"mr-4 order-0\"} rounded-full font-medium`}\n      onClick={() => toggleTaskCompleted(taskId)}\n    >\n      <span className=\"block py-1 px-3 absolute invisible sm:static sm:visible\">\n        {taskCompleted ? \"completed\" : \"uncompleted\"}\n      </span>\n      <span className=\" sm:hidden w-6 h-6 grid place-items-center\">\n        {taskCompleted ? (\n          <Check className=\"w-3 h-3\" />\n        ) : (\n          <SvgX className=\"w-3 h-3\" />\n        )}\n      </span>\n    </button>\n  );\n};\n\nexport default React.memo(BtnToggleCompleted);\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,cAAc,QAAQ,sBAAsB;AACrD,SAASC,YAAY,QAAQ,4BAA4B;AACzD,SAASC,cAAc,IAAIC,IAAI,QAAQ,uBAAuB;AAC9D,SAASD,cAAc,IAAIE,KAAK,QAAQ,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpE,MAAMC,kBAIJ,GAAGA,CAAC;EAAEC,aAAa;EAAEC,MAAM;EAAEC;AAAc,CAAC,KAAK;EAAAC,EAAA;EACjD,MAAMC,QAAQ,GAAGZ,cAAc,CAAC,CAAC;EAEjC,MAAMa,mBAAmB,GAAIC,EAAU,IAAK;IAC1CF,QAAQ,CAACX,YAAY,CAACY,mBAAmB,CAACC,EAAE,CAAC,CAAC;EAChD,CAAC;EAED,oBACER,OAAA;IACES,KAAK,EAAEP,aAAa,GAAG,qBAAqB,GAAG,mBAAoB;IACnEQ,SAAS,EAAG,GACVR,aAAa,GACT,kCAAkC,GAClC,8BACL,IAAGE,aAAa,GAAG,MAAM,GAAG,cAAe,2BAA2B;IACvEO,OAAO,EAAEA,CAAA,KAAMJ,mBAAmB,CAACJ,MAAM,CAAE;IAAAS,QAAA,gBAE3CZ,OAAA;MAAMU,SAAS,EAAC,yDAAyD;MAAAE,QAAA,EACtEV,aAAa,GAAG,WAAW,GAAG;IAAa;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC,CAAC,eACPhB,OAAA;MAAMU,SAAS,EAAC,4CAA4C;MAAAE,QAAA,EACzDV,aAAa,gBACZF,OAAA,CAACF,KAAK;QAACY,SAAS,EAAC;MAAS;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,gBAE7BhB,OAAA,CAACH,IAAI;QAACa,SAAS,EAAC;MAAS;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAC5B;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEb,CAAC;AAACX,EAAA,CAjCIJ,kBAIJ;EAAA,QACiBP,cAAc;AAAA;AAAAuB,EAAA,GAL3BhB,kBAIJ;AA+BF,eAAAiB,GAAA,gBAAezB,KAAK,CAAC0B,IAAI,CAAClB,kBAAkB,CAAC;AAAC,IAAAgB,EAAA,EAAAC,GAAA;AAAAE,YAAA,CAAAH,EAAA;AAAAG,YAAA,CAAAF,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}